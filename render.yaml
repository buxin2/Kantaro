services:
  # Main Flask Web Application
  - type: web
    name: ai-security-camera
    runtime: python3
    buildCommand: |
      pip install --upgrade pip
      pip install -r requirements.txt
    startCommand: gunicorn app:app
    plan: starter  # Can be: starter, standard, pro, pro_plus
    
    # Environment Variables
    envVars:
      - key: FLASK_ENV
        value: production
      - key: SECRET_KEY
        generateValue: true  # Render will generate a secure random key
      - key: DATABASE_URL
        fromDatabase:
          name: ai-security-db
          property: connectionString
      - key: STRIPE_PUBLISHABLE_KEY
        sync: false  # Set manually in Render dashboard
      - key: STRIPE_SECRET_KEY
        sync: false  # Set manually in Render dashboard (keep secret!)
      - key: PORT
        value: "10000"  # Render's default port
    
    # Health check endpoint
    healthCheckPath: /health
    
    # Auto-deploy settings
    autoDeploy: true  # Deploy on git push
    
    # Build settings
    buildFilter:
      paths:
        - "**/*.py"
        - "requirements.txt"
        - "templates/**"
        - "static/**"
      ignoredPaths:
        - "*.md"
        - "*.txt"
        - ".git/**"
    
    # Disk storage (for temporary files, model cache, etc.)
    disk:
      name: ai-camera-disk
      mountPath: /opt/render/project/src/storage
      sizeGB: 2  # 2GB for YOLO models and temporary files

  # PostgreSQL Database
  - type: pserv
    name: ai-security-db
    runtime: postgresql
    plan: starter  # Can be: starter, standard, pro
    
    # Database configuration
    envVars:
      - key: POSTGRES_DB
        value: security_camera_db
      - key: POSTGRES_USER
        value: security_user
      - key: POSTGRES_PASSWORD
        generateValue: true  # Render will generate a secure password
    
    # Database settings
    ipAllowList: []  # Empty = allow all (default)
    
    # Backup settings (available on paid plans)
    # backup:
    #   schedule: "0 2 * * *"  # Daily at 2 AM
    #   retention: 7  # Keep 7 days of backups

# Optional: Static site for landing page or docs
# - type: static
#   name: ai-security-docs
#   buildCommand: |
#     # Build your static documentation
#     echo "Building static site..."
#   staticPublishPath: ./docs
#   buildFilter:
#     paths:
#       - docs/**
#   envVars:
#     - key: NODE_VERSION
#       value: "18"

# Optional: Redis for caching (if you add Redis support later)
# - type: redis
#   name: ai-security-redis
#   plan: starter
#   ipAllowList: []

# Optional: Background worker service (if you add background tasks)
# - type: worker
#   name: ai-security-worker
#   runtime: python3
#   buildCommand: |
#     pip install --upgrade pip
#     pip install -r requirements.txt
#   startCommand: python worker.py  # Your background worker script
#   envVars:
#     - key: DATABASE_URL
#       fromDatabase:
#         name: ai-security-db
#         property: connectionString
#     - key: REDIS_URL
#       fromService:
#         type: redis
#         name: ai-security-redis
#         property: connectionString
